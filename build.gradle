plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

// com.회사이름
group = 'com.heejookang'

version = '0.0.1-SNAPSHOT'

// java version
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	// 외부 라이브러리 가져오는 곳
	mavenCentral()
}

// 설치할 외부 라이브러리를 적는 부분
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// 타임리프 설치
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	// mysql접속을 도와주는 라이브러리
	runtimeOnly 'com.mysql:mysql-connector-j'
	// orm 라이브러리
	// 원래 RDBMS는 데이터 입출력시 SQL 써야함
	// 이게 귀찮고 어려워해서 ORM 씀
	// 장점 : Java 코드로 데이터 입출력 가능, 뽑은 데이터 타입체크도 편함, 데이터를 Java 스타일로 관리 가능
	// 단점 : 입출력 속도 저하
	// JPA : Java의 ORM 표준 문법
	// Hibernate : JPA를 쓰기좋게 구현한거
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}
